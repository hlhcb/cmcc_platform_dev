<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cmcc.system.mapper.EnterpriseUserInfoMapper">
    
    <resultMap type="EnterpriseUserInfo" id="EnterpriseUserInfoResult">
        <result property="id"    column="id"    />
        <result property="deptId"    column="dept_id"    />
        <result property="deptName"    column="dept_name"    />
        <result property="userId"    column="user_id"    />
        <result property="userName"    column="user_name"    />
        <result property="userTel"    column="user_tel"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectEnterpriseUserInfoVo">
        select id, dept_id, dept_name, user_id, user_name, user_tel, remark from enterprise_user_info
    </sql>

    <select id="selectEnterpriseUserInfoList" parameterType="EnterpriseUserInfo" resultMap="EnterpriseUserInfoResult">
        <include refid="selectEnterpriseUserInfoVo"/>
        <where>  
            <if test="deptId != null "> and dept_id = #{deptId}</if>
            <if test="deptName != null  and deptName != ''"> and dept_name like concat('%', #{deptName}, '%')</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="userName != null  and userName != ''"> and user_name like concat('%', #{userName}, '%')</if>
            <if test="userTel != null  and userTel != ''"> and user_tel = #{userTel}</if>
        </where>
    </select>
    
    <select id="selectEnterpriseUserInfoById" parameterType="Long" resultMap="EnterpriseUserInfoResult">
        <include refid="selectEnterpriseUserInfoVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertEnterpriseUserInfo" parameterType="EnterpriseUserInfo" useGeneratedKeys="true" keyProperty="id">
        insert into enterprise_user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deptId != null">dept_id,</if>
            <if test="deptName != null">dept_name,</if>
            <if test="userId != null">user_id,</if>
            <if test="userName != null">user_name,</if>
            <if test="userTel != null">user_tel,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="deptId != null">#{deptId},</if>
            <if test="deptName != null">#{deptName},</if>
            <if test="userId != null">#{userId},</if>
            <if test="userName != null">#{userName},</if>
            <if test="userTel != null">#{userTel},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateEnterpriseUserInfo" parameterType="EnterpriseUserInfo">
        update enterprise_user_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="deptName != null">dept_name = #{deptName},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="userTel != null">user_tel = #{userTel},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteEnterpriseUserInfoById" parameterType="Long">
        delete from enterprise_user_info where id = #{id}
    </delete>

    <delete id="deleteEnterpriseUserInfoByIds" parameterType="String">
        delete from enterprise_user_info where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>